#!/bin/sh
# =========================================
# configure
#
# Hamid R. Bazoobandi
# Sat 14.7.2012 Amsterdam
# =========================================
compiler="none"
gcc="no"
clang="no"
output=config.mak
boot_stage1="stage1"
boot_stage2="stage2"
vmm="vmm"
pm="pm"
fs="fs"
init="init"
usrlib="libos.a"
bootaps="boot_aps"
image_name="anarchix.iso"
# =========================================
# Check options
for opt do
  optarg=`expr "x$opt" : 'x[^=]*=\(.*\)'`
  case $opt in
  --help|-h) show_help="yes"
  ;;
  --vmm-name=*)
    if test "$optarg" = ""; then
      echo "vmm name can not be empty string!";
      exit 1;
    fi
    vmm="$optarg"
  ;;
  --pm-name=*)
    if test "$optarg" = ""; then
      echo "pm name can not be empty string!";
      exit 1;
    fi
    pm="$optarg"
  ;;
  --fs-name=*)
    if test "$optarg" = ""; then
      echo "fs name can not be empty string!";
      exit 1;
    fi
    fs="$optarg"
  ;;
  --init-name=*)
    if test "$optarg" = ""; then
      echo "init name can not be empty string!";
      exit 1;
    fi
    init="$optarg"
  ;;
  --boot_stage1-name=*)
    if test "$optarg" = ""; then
      echo "boot_stage1 name can not be empty string!";
      exit 1;
    fi
    boot_stage1="$optarg";
  ;;
  --boot_stage2-name=*)
    if test "$optarg" = ""; then
      echo "boot_stage2 name can not be empty string!";
      exit 1;
    fi
    boot_stage2="$optarg";
  ;;

 --image-name=*)
    if test "$optarg" = ""; then
      echo "image name can not be empty string!";
      exit 1;
    fi
    image_name="$optarg";
  ;;
  --usrlib-name=*)
    if test "$optarg" = ""; then
      echo "user lib name can not be empty string!";
      exit 1;
    fi
    usrlib="$optarg";
  ;;
  --bootaps-name=*)
    if test "$optarg" = ""; then
      echo "bootaps name can not be empty string!";
      exit 1;
    fi
    bootaps="$optarg";
  ;;

  *) echo "ERROR: Unknown option $opt"; show_help="yes"
  ;;
  esac
done
# =========================================
if test "$show_help" = "yes"; then
  echo "Usage: configure [options]"
  echo
  echo "Options:"
  echo "--help              Print this message"
  echo "--vmm-name          Change default vmm name. Default vmm name is \"vmm.bin\"."
  echo "--pm-name           Change default pm name. Default pm name is \"pm\"."
  echo "--fs-name           Change default fs name. Default fs name is \"fs\"."
  echo "--init-name         Change default init name. Default fs name is \"init\"."
  echo "--boot_stage1-name  Change default loader name. Default loader name is \"stage1.bin\"."
  echo "--boot_stage2-name  Change default loader name. Default loader name is \"stage2.bin\"."
  echo "--image-name        Change default image name. Default image name is \"anarchix.iso\"."
  echo "--usrlib-name       Change default user lib name. Default user lib name is \"libos.a\"."
  echo "--bootaps-name      Change default application processors boot program name. Default user lib name is \"boot_aps\"."
  exit 1;
fi
# =========================================
echo -n "Checking genisoimage "
if ! type "genisoimage" >/dev/null 2>&1; then
  echo "ERROR: genisoimage not found!" >&2;
  exit 1
fi
echo "OK!"
# =========================================
#echo -n "Checking grub... "
#if ! type "grub" >/dev/null 2>&1; then
#  echo "ERROR: grub not found!" >&2;
#  exit 1
#fi
#echo "OK!"
# =========================================
echo "Checking compilers... "

if type "gcc" >/dev/null 2>&1; then
  gcc="yes"
fi
if type "clang" >/dev/null 2>&1; then
  clang="yes"
fi

if test "$gcc" = "yes" && test "$clang" = "yes"; then
  echo "Both \"gcc\" and \"clang\" were found installed on your system."
  echo -n "Which one do you prefer to use to compile the code?[GCC/clang] "
  while read ans; do
    case $ans in
      ""|gcc)
        compiler="gcc"
        break;
      ;;
      clang)
        compiler="clang"
        break;
      ;;
      *)
        echo "Invalid data! Please enter either \"gcc\" or \"clang\"!";
        echo -n "Which one do you prefer to use to compile the code?[GCC/clang] "
      ;;
    esac
 done
fi

if test "$compiler" = "none"; then
  if test "$gcc" = "yes"; then
    compiler="gcc";
  else
    if test "$clang" = "yes"; then
      compiler="clang"
    else
      echo "ERROR: No compiler found!" >&2;
      exit 1;
    fi
  fi
fi

echo "Checking compilers... OK! "

echo -n "Generating config.mak... "
echo "# This file is automatically generated! Don't edit!" > $output
echo "export BOOT_STAGE1 = $boot_stage1"     >> $output
echo "export BOOT_STAGE2 = $boot_stage2"     >> $output
echo "export VMM         = $vmm"     >> $output
echo "export PM          = $pm"     >> $output
echo "export FS          = $fs"     >> $output
echo "export INIT        = $init"     >> $output
echo "export IMAGE       = $image_name" >> $output
echo "export USRLIB      = $usrlib"     >> $output
echo "export CC          = $compiler"   >> $output
echo "export CONFIG-MAK  = $output"     >> $output
echo "export BOOT_APS    = $bootaps"    >> $output
echo "OK!"

echo "Configuration completed successfully!"
